"$schema" = 'https://starship.rs/config-schema.json'

format = """
[ ](fg:bg1)\
$os\
[](bg:bg2 fg:bg1)\
$shell\
[](bg:bg3 fg:bg2)\
$container\
[](bg:d_red fg:bg3)\
$hostname\
$localip\
[](bg:d_orange fg:d_red)\
$username\
[](bg:d_yellow fg:d_orange)\
$directory\
[](fg:d_yellow bg:d_aqua)\
$git_branch\
$git_commit\
$git_metrics\
$git_state\
$git_status\
$fossil_branch\
$hg_branch\
$pijul_channel\
[](fg:d_aqua bg:d_blue)\
$package\
$c\
$rust\
$golang\
$php\
$java\
$kotlin\
$gradle\
$haskell\
$python\
$vcsh\
$zig\
$dart\
$dotnet\
$gleam\
$cobol\
$crystal\
$elixir\
$elm\
$erlang\
$fennel\
$haxe\
$helm\
$julia\
$lua\
$nim\
$ocaml\
$odin\
$opa\
$perl\
$quarto\
$raku\
$red\
$rlang\
$ruby\
$scala\
$solidity\
$swift\
$typst\
$vlang\
$daml\
$purescript\
$bun\
$deno\
$nodejs\
$cmake\
[](fg:d_blue bg:d_purple)\
$conda\
$guix_shell\
$nix_shell\
$vagrant\
$direnv\
$singularity\
$pulumi\
$spack\
$meson\
$terraform\
$buf\
$nats\
[](fg:d_purple bg:bg3)\
$docker_context\
$kubernetes\
[](fg:bg3 bg:bg2)\
$aws\
$azure\
$gcloud\
$openstack\
[](fg:bg2 bg:bg1)\
$time\
$cmd_duration\
[](fg:bg1)\
$line_break $sudo$character"""
right_format = "$jobs$shlvl$battery$memory_usage"
continuation_prompt = "[ >>](fg:bg3) "
scan_timeout = 100
command_timeout = 1000
add_newline = true
follow_symlinks = true
palette = 'gruvbox_dark'

[palettes.gruvbox_dark]
bg0 = "#282828"
bg0_h = "#1d2021"
bg0_s = "#32302f"
bg1 = "#3c3836"
bg2 = "#504945"
bg3 = '#665c54'
bg4 = "#766f64"
fg0 = '#fbf1c7'
fg1 = "#ebdbb2"
fg2 = "#d5c4a1"
fg3 = '#bdae93'
fg4 = "#a89984"
d_black = "#282828"
l_black = "#928374"
d_red = '#cc241d'
l_red = "#fb4934"
d_green = '#98971a'
l_green = "#b8bb26"
d_yellow = '#d79921'
l_yellow = "#fabd2f"
d_blue = '#458588'
l_blue = '#83a598'
d_purple = '#b16286'
l_purple = "#d3899b"
d_aqua = '#689d6a'
l_aqua = '#8ec07c'
d_orange = '#d65d0e'
l_orange = '#fe8019'
d_white = "#a89984"
l_white = "#ebdbb2"

[fill]
style = "bg:bg0"
symbol = "."
disabled = false

[os]
format = "[$symbol ]($style)"
disabled = false
style = "bg:bg1 fg:fg0"

[os.symbols]
AlmaLinux = "[](fg:l_yellow bg:bg1)"
Alpine = "[](fg:l_blue bg:bg1)"
Amazon = "[](fg: bg:bg1)"
Android = "[](fg:d_green bg:bg1)"
Arch = "[󰣇](fg:d_blue bg:bg1)"
Artix = "[](fg:d_blue bg:bg1)"
CentOS = "[](fg:d_purple bg:bg1)"
Debian = "[](fg:d_red bg:bg1)"
EndeavourOS = "[](fg:l_purple bg:bg1)"
Fedora = "[](fg:l_blue bg:bg1)"
FreeBSD = "[](fg:l_red bg:bg1)"
Garuda = "[](fg:d_blue bg:bg1)"
Gentoo = "[](fg:d_purple bg:bg1)"
Illumos = "[](fg:d_orange bg:bg1)"
Kali = "[](fg:d_aqua bg:bg1)"
Linux = "[](fg:d_yellow bg:bg1)"
Macos = "[](fg:l_white bg:bg1)"
Manjaro = "[](fg:d_green bg:bg1)"
Mint = "[󰣭](fg:d_green bg:bg1)"
NixOS = "[](fg:l_blue bg:bg1)"
OpenBSD = "[](fg:l_yellow bg:bg1)"
openSUSE = "[](fg:l_green bg:bg1)"
Pop = "[](fg:l_aqua bg:bg1)"
Raspbian = "[](fg:l_red bg:bg1)"
Redhat = "[](fg:d_red bg:bg1)"
RedHatEnterprise = "[](fg:d_red bg:bg1)"
RockyLinux = "[](fg:l_green bg:bg1)"
Redox = "[🧪](fg:l_white bg:bg1)"
Solus = "[](fg:l_blue bg:bg1)"
SUSE = "[](fg:l_green bg:bg1)"
Ubuntu = "[](fg:l_orange bg:bg1)"
Unknown = "[❓](fg:d_white bg:bg1)"
Void = "[ ](fg:d_green bg:bg1)"
Windows = "[](fg:d_blue bg:bg1)"

[shell]
format = "[$indicator](bg:bg2)"
bash_indicator = "[ b ](bold bg:bg2 fg:l_orange)"
fish_indicator = "[ f ](bold bg:bg2 fg:l_red)"
zsh_indicator = "[](bold bg:bg2 fg:d_green)"
powershell_indicator = "[ pw ](bold bg:bg2 fg:d_blue)"
ion_indicator = "[ i ](bold bg:bg2 fg:l_aqua)"
elvish_indicator = "[ elv ](bold bg:bg2 fg:l_yellow)"
tcsh_indicator = "[ tc ](bold bg:bg2 fg:l_purple)"
nu_indicator = "[ nu ](bold bg:bg2 fg:l_green)"
xonsh_indicator = "[ xo ](bold bg:bg2 fg:l_blue)"
cmd_indicator = "[ cmd ](bold bg:bg2 fg:l_white)"
unknown_indicator = " ❓ "
disabled = false

[container]
format = '[ $symbol$name ]($style)'
symbol = "⬢ "
style = "bold dimmed fg:d_red bg:bg3"
disabled = false

[hostname]
ssh_only = true
ssh_symbol = " "
trim_at = "."
detect_env_vars = []
format = "[ $ssh_symbol$hostname]($style)"
style = "bg:d_red fg:fg0"
disabled = false

[localip]
ssh_only = true
format = "[@$localipv4 ]($style)"
style = "bg:d_red fg:fg0"
disabled = false

[username]
show_always = true
style_user = "bg:d_orange fg:fg0"
style_root = "bg:d_orange fg:d_red"
format = '[ $user ]($style)'

[username.aliases]
root = "ADMIN"

[directory]
style = "fg:fg0 bg:d_yellow"
format = "[   $path$read_only ]($style)"
truncation_length = 3
truncation_symbol = "…/"
read_only = " "

[directory.substitutions]
"Desktop" = " "
"Escritorio" = " "
"Documents" = "󰈙 "
"Documentos" = "󰈙 "
"Downloads" = " "
"Descargas" = " "
"Music" = "󰝚 "
"Videos" = ' '
"Vídeos" = ' '
"Música" = "󰝚 "
"Pictures" = " "
"Imágenes" = " "
"Public" = " "
"Público" = " "
"/mnt/sda1/code" = "󰲋 "
"code" = "󰲋 "

[git_branch]
symbol = " "
style = "bg:d_aqua"
format = '[[ $symbol$branch(:$remote_branch) ](fg:fg0 bg:d_aqua)]($style)'
truncation_length = 9223372036854775807
truncation_symbol = "…"
only_attached = false
always_show_remote = false
ignore_branches = []

[git_commit]
commit_hash_length = 7
format = '[\($tag$hash\) ]($style)'
style = "bg:d_aqua"
only_detached = true
disabled = false
tag_symbol = "🏷 "
tag_disabled = true
tag_max_candidates = 0

[git_metrics]
added_style = "bold fg:l_green"
deleted_style = "bold fg:l_red"
only_nonzero_diffs = true
format = "[[+$added]($added_style) [-$deleted]($deleted_style) ](bg:d_aqua)"
disabled = true
ignore_submodules = false

[git_state]
rebase = "REBASING"
merge = "MERGING"
revert = "REVERTING"
cherry_pick = "CHERRY-PICKING"
bisect = "BISECTING"
am = "AM"
am_or_rebase = "AM/REBASE"
style = "bg:d_aqua"
format = '[\($state $progress_current/$progress_total\) ]($style)'
disabled = false

[git_status]
style = "bg:d_aqua"
format = '([\[$all_status$ahead_behind\]]($style))'
stashed = '\$'
ahead = "⇡"
behind = "⇣"
up_to_date = ""
diverged = "⇕"
conflicted = "="
deleted = "✘"
renamed = "»"
modified = "!"
staged = "+"
untracked = "?"
typechanged = "*"
ignore_submodules = false

[fossil_branch]
format = "[ $symbol$branch ]($style)"
symbol = " "
style = "bg:d_aqua"
truncation_length = 9223372036854775807
truncation_symbol = "…"
disabled = true

[fossil_metrics]
format = "[[+$added]($added_style) [-$deleted]($deleted_style) ](bg:d_aqua)"
added_style = "bold fg:l_green"
deleted_style = "bold fg:l_red"
only_nonzero_diffs = true
disabled = true

[hg_branch]
symbol = " "
style = "bold purple"
format = "[ [$symbol$branch(:$topic) ](bg:d_aqua)"
truncation_length = 9223372036854775807
truncation_symbol = "…"
disabled = true

[pijul_channel]
symbol = " "
style = "bg:d_aqua"
format = "[ $symbol$channel ]($style)"
truncation_length = 9223372036854775807
truncation_symbol = "…"
disabled = true

[package]
format = "[ $symbol$version ]($style)"
symbol = "󰏗 "
style = "bg:d_blue fg:fg0"
display_private = false
disabled = false
version_format = "v${raw}"

[c]
symbol = " "
style = "bg:d_blue"
format = '[[ $symbol( $version) ](fg:fg0 bg:d_blue)]($style)'
version_format = "v${raw}"
detect_extensions = ["c", "h"]
detect_files = []
detect_folders = []
commands = [["cc", "--version"], ["gcc", "--version"], ["clang", "--version"]]

[rust]
symbol = ""
style = "bg:d_blue"
format = '[[ $symbol( $version) ](fg:fg0 bg:d_blue)]($style)'
version_format = "v${raw}"
detect_extensions = ["rs"]
detect_files = ["Cargo.toml"]
detect_folders = []

[golang]
symbol = ""
style = "bg:d_blue"
format = '[[ $symbol( $version) ](fg:fg0 bg:d_blue)]($style)'
version_format = "v${raw}"
not_capable_style = "bold red"
detect_files = [
   "go.mod",
   "go.sum",
   "go.work",
   "glide.yaml",
   "Gopkg.yml",
   "Gopkg.lock",
   ".go-version",
]
detect_folders = ["Godeps"]
detect_extensions = ["go"]

[php]
symbol = ""
style = "bg:d_blue"
format = '[[ $symbol( $version) ](fg:fg0 bg:d_blue)]($style)'
version_format = "v${raw}"
detect_extensions = ["php"]
detect_files = ["composer.json", ".php-version"]
detect_folders = []

[java]
symbol = ""
style = "bg:d_blue"
format = '[[ $symbol( $version) ](fg:fg0 bg:d_blue)]($style)'
version_format = "v${raw}"
detect_files = [
   "pom.xml",
   "build.gradle.kts",
   "build.sbt",
   ".java-version",
   "deps.edn",
   "project.clj",
   "build.boot",
   ".sdkmanrc",
]
detect_folders = []
detect_extensions = ["java", "class", "jar", "gradle", "clj", "cljc"]

[kotlin]
symbol = ""
style = "bg:d_blue"
format = '[[ $symbol( $version) ](fg:fg0 bg:d_blue)]($style)'
version_format = "v${raw}"
kotlin_binary = "kotlin"
detect_extensions = ["kt", "kts"]
detect_files = []
detect_folders = []

[haskell]
symbol = ""
style = "bg:d_blue"
format = '[[ $symbol( $version) ](fg:fg0 bg:d_blue)]($style)'
detect_extensions = ["hs", "cabal", "hs-boot"]
detect_files = ["stack.yaml", "cabal.project"]
detect_folders = []
version_format = "v${raw}"

[python]
symbol = ""
style = "bg:d_blue fg:fg0"
format = '[ $symbol$pyenv_prefix( $version )(\($virtualenv\))]($style)'
pyenv_version_name = false
pyenv_prefix = "pyenv "
python_binary = ["python", "python3", "python2"]
version_format = "v${raw}"
disabled = false
detect_extensions = ["py"]
detect_files = [
   "requirements.txt",
   ".python-version",
   "pyproject.toml",
   "Pipfile",
   "tox.ini",
   "setup.py",
   "__init__.py",
]
detect_folders = []

[vcsh]
symbol = ""
style = "bg:d_blue fg:fg0"
format = "[ vcsh $symbol$repo ]($style)"
disabled = false

[nodejs]
symbol = ""
style = "bg:d_blue"
format = '[[ $symbol( $version) ](fg:fg0 bg:d_blue)]($style)'
version_format = "v${raw}"
not_capable_style = "bold red"
detect_extensions = ["js", "mjs", "cjs", "ts", "mts", "cts"]
detect_files = ["package.json", ".node-version", ".nvmrc"]
detect_folders = ["node_modules"]

[zig]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
symbol = " "
style = "bg:d_blue"
disabled = false
detect_extensions = ["zig"]
detect_files = []
detect_folders = []

[bun]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
symbol = " "
style = "bg:d_blue"
disabled = false
detect_extensions = []
detect_files = ["bun.lockb", "bunfig.toml"]
detect_folders = []

[dart]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
symbol = " "
style = "bg:d_blue"
disabled = false
detect_extensions = ["dart"]
detect_files = ["pubspec.yaml", "pubspec.yml", "pubspec.lock"]
detect_folders = [".dart_tool"]

[deno]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
symbol = "deno "
style = "bg:d_blue"
disabled = false
detect_extensions = []
detect_files = [
   "deno.json",
   "deno.jsonc",
   "mod.ts",
   "deps.ts",
   "mod.js",
   "deps.js",
]
detect_folders = []

[dotnet]
format = "[$symbol$version 🎯 $tfm ]($style)"
version_format = "v${raw}"
symbol = "󰪮 "
style = "bg:d_blue"
heuristic = true
disabled = false
detect_extensions = ["csproj", "fsproj", "xproj"]
detect_files = [
   "global.json",
   "project.json",
   "Directory.Build.props",
   "Directory.Build.targets",
   "Packages.props",
]
detect_folders = []

[gleam]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
symbol = " "
style = "bg:d_blue"
disabled = false
detect_extensions = ["gleam"]
detect_files = ["gleam.toml"]
detect_folders = []

[cobol]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
symbol = "cobol "
style = "bg:d_blue"
disabled = false
detect_extensions = ["cbl", "cob", "CBL", "COB"]
detect_files = []
detect_folders = []

[cmake]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
symbol = "△ "
style = "bold blue"
disabled = false
detect_extensions = []
detect_files = ["CMakeLists.txt", "CMakeCache.txt"]
detect_folders = []

[crystal]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
symbol = " "
style = "bg:d_blue"
disabled = false
detect_extensions = ["cr"]
detect_files = ["shard.yml"]
detect_folders = []

[elixir]
format = '[ $symbol$version \(OTP $otp_version\) ]($style)'
version_format = "v${raw}"
symbol = " "
style = "bg:d_blue"
disabled = false
detect_extensions = []
detect_files = ["mix.exs"]
detect_folders = []

[elm]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
symbol = " "
style = "bg:d_blue"
disabled = false
detect_extensions = ["elm"]
detect_files = ["elm.json", "elm-package.json", ".elm-version"]
detect_folders = ["elm-stuff"]

[erlang]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
symbol = " "
style = "bg:d_blue"
disabled = false
detect_extensions = []
detect_files = ["rebar.config", "erlang.mk"]
detect_folders = []

[fennel]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
symbol = " "
style = "bg:d_blue"
disabled = true
detect_extensions = ["fnl"]
detect_files = []
detect_folders = []

[gradle]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
symbol = " "
style = "bg:d_blue"
disabled = false
recursive = false
detect_extensions = ["gradle", "gradle.kts"]
detect_files = []
detect_folders = ["gradle"]

[haxe]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
symbol = " "
style = "bg:d_blue"
disabled = false
detect_extensions = ["hx", "hxml"]
detect_files = ["haxelib.json", "hxformat.json", ".haxerc"]
detect_folders = [".haxelib", "haxe_libraries"]

[helm]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
symbol = "⎈ "
style = "bg:d_blue"
disabled = false
detect_extensions = []
detect_files = ["helmfile.yaml", "Chart.yaml"]
detect_folders = []

[julia]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
symbol = " "
style = "bg:d_blue"
disabled = false
detect_extensions = ["jl"]
detect_files = ["Project.toml", "Manifest.toml"]
detect_folders = []

[lua]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
symbol = " "
style = "bg:d_blue"
lua_binary = "lua"
disabled = false
detect_extensions = ["lua"]
detect_files = [".lua-version"]
detect_folders = ["lua"]

[nim]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
symbol = "󰆥 "
style = "bg:d_blue"
disabled = false
detect_extensions = ["nim", "nims", "nimble"]
detect_files = ["nim.cfg"]
detect_folders = []

[ocaml]
format = '[ $symbol$version \($switch_indicator$switch_name\) ]($style)'
version_format = "v${raw}"
global_switch_indicator = ""
local_switch_indicator = "*"
symbol = " "
style = "bg:d_blue"
disabled = false
detect_extensions = ["opam", "ml", "mli", "re", "rei"]
detect_files = ["dune", "dune-project", "jbuild", "jbuild-ignore", ".merlin"]
detect_folders = ["_opam", "esy.lock"]

[odin]
format = "[ $symbol$version ]($style)"
show_commit = false
symbol = "Ø "
style = "bg:d_blue"
disabled = false
detect_extensions = ["odin"]
detect_files = []
detect_folders = []

[opa]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
symbol = "󰅟 "
style = "bold blue"
disabled = false
detect_extensions = ["rego"]
detect_files = []
detect_folders = []

[perl]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
symbol = " "
style = "bg:d_blue"
disabled = false
detect_extensions = ["pl", "pm", "pod"]
detect_files = [
   "Makefile.PL",
   "Build.PL",
   "cpanfile",
   "cpanfile.snapshot",
   "META.json",
   "META.yml",
   ".perl-version",
]
detect_folders = []

[purescript]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
symbol = " "
style = "bold white"
disabled = false
detect_extensions = ["purs"]
detect_files = ["spago.dhall", "spago.yaml", "spago.lock"]
detect_folders = []

[quarto]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
symbol = "⨁ "
style = "bg:d_blue"
disabled = false
detect_extensions = ["qmd"]
detect_files = ["_quarto.yml"]
detect_folders = []

[raku]
format = "[ $symbol$version-$vm_version ]($style)"
version_format = "v${raw}"
symbol = " "
style = "bg:d_blue"
disabled = false
detect_extensions = ["p6", "pm6", "pod6", "raku", "rakumod"]
detect_files = ["META6.json"]
detect_folders = []

[red]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
symbol = "󱥒 "
style = "bg:d_blue"
disabled = false
detect_extensions = ["red", "reds"]
detect_files = []
detect_folders = []

[rlang]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
style = "bg:d_blue"
symbol = "󰟔 "
disabled = false
detect_extensions = ["R", "Rd", "Rmd", "Rproj", "Rsx"]
detect_files = ["DESCRIPTION"]
detect_folders = [".Rproj.user"]

[ruby]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
symbol = " "
style = "bg:d_blue"
disabled = false
detect_extensions = ["rb"]
detect_files = ["Gemfile", ".ruby-version"]
detect_folders = []
detect_variables = ["RUBY_VERSION", "RBENV_VERSION"]

[scala]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
disabled = false
style = "bg:d_blue"
symbol = "🆂 "
detect_extensions = ["sbt", "scala"]
detect_files = [".scalaenv", ".sbtenv", "build.sbt"]
detect_folders = [".metals"]

[solidity]
format = "[ $symbol$version ]($style)"
version_format = "v${major}.${minor}.${patch}"
disabled = false
style = "bg:d_blue"
symbol = "S "
compiler = ["solc"]
detect_extensions = ["sol"]
detect_files = []
detect_folders = []

[swift]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
symbol = " "
style = "bg:d_blue"
disabled = false
detect_extensions = ["swift"]
detect_files = ["Package.swift"]
detect_folders = []

[typst]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
symbol = "t "
style = "bg:d_blue"
disabled = false
detect_extensions = ["typ"]
detect_files = ["template.typ"]
detect_folders = []

[vlang]
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
symbol = "V "
style = "bg:d_blue"
disabled = false
detect_extensions = ["v"]
detect_files = ["v.mod", "vpkg.json", ".vpkg-lock.json"]
detect_folders = []

[daml]
symbol = "Λ "
format = "[ $symbol$version ]($style)"
version_format = "v${raw}"
style = "bg:d_blue"
disabled = false
detect_extensions = []
detect_files = ["daml.yaml"]
detect_folders = []

[conda]
symbol = ""
style = "bg:d_purple"
format = '[[ $symbol( $environment) ](fg:fg0 bg:d_purple)]($style)'
truncation_length = 1
ignore_base = true

[guix_shell]
format = " [ $symbol ]($style) "
symbol = "🐃"
style = "bg:d_purple fg:fg0"
disabled = false

[nix_shell]
format = '[ $symbol$state( \($name\) )]($style) '
symbol = " "
style = "bg:d_purple fg:fg0"
impure_msg = "impure"
pure_msg = "pure"
unknown_msg = ""
disabled = false
heuristic = false

[vagrant]
format = "[ $symbol($version) ]($style)"
version_format = "v${raw}"
symbol = "⍱ "
style = "bg:d_purple fg:fg0"
disabled = false
detect_extensions = []
detect_files = ["Vagrantfile"]
detect_folders = []

[direnv]
format = "[ $symbol$loaded/$allowed ]($style)"
symbol = "direnv "
style = "bg:d_purple fg:fg0"
disabled = true
detect_extensions = []
detect_files = [".envrc"]
detect_folders = []
allowed_msg = "allowed"
not_allowed_msg = "not allowed"
denied_msg = "denied"
loaded_msg = "loaded"
unloaded_msg = "not loaded"

[singularity]
symbol = " "
format = '[ $symbol\[$env\] ]($style)'
style = "bg:d_purple fg:fg0"
disabled = false

[pulumi]
format = "[ $symbol($username@)$stack ]($style) "
version_format = "v${raw}"
symbol = " "
style = "bg:d_purple fg:fg0"
disabled = false
search_upwards = true

[spack]
truncation_length = 1
format = "[ $symbol$environment ]($style) "
symbol = "🅢 "
style = "bg:d_purple fg:fg0"
disabled = false

[meson]
truncation_length = 4294967295
truncation_symbol = "…"
format = "[ $symbol$project ]($style) "
symbol = "󰯙 "
style = "bg:d_purple fg:fg0"
disabled = false

[terraform]
format = "[ $symbol$workspace ]($style) "
version_format = "v${raw}"
symbol = "󱁢 "
style = "bg:d_purple fg:fg0"
disabled = false
detect_extensions = ["tf", "tfplan", "tfstate"]
detect_files = []
detect_folders = [".terraform"]

[buf]
format = "[ $symbol($version) ]($style)"
version_format = "v${raw}"
symbol = " "
style = "bg:d_purple fg:fg0"
disabled = false
detect_extensions = []
detect_files = ["buf.yaml", "buf.gen.yaml", "buf.work.yaml"]
detect_folders = []

[nats]
format = "[ $symbol($name) ]($style)"
symbol = " "
style = "bg:d_purple fg:fg0"
disabled = true

[docker_context]
symbol = ""
style = "bg:bg3"
format = '[[ $symbol( $context) ](fg:l_blue bg:bg3)]($style)'
only_with_files = true
detect_extensions = []
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []

[kubernetes]
symbol = "☸ "
format = '[ $symbol$context( \($namespace\)) ]($style)'
style = "bg:bg3 fg:d_blue"
disabled = false
detect_extensions = []
detect_files = []
detect_folders = []
detect_env_vars = []
contexts = []

[kubernetes.context_aliases]

[kubernetes.user_aliases]

[aws]
format = '[ $symbol$profile \($region\) \[$duration\] ]($style)'
symbol = " "
style = "bg:bg2"
disabled = false
expiration_symbol = "X"
force_display = false

[aws.region_aliases]

[aws.profile_aliases]

[azure]
format = "[ $symbol$subscription ]($style)"
symbol = "󰠅 "
style = "bg:bg2"
disabled = true

[azure.subscription_aliases]

[gcloud]
format = '[ $symbol$account@$domain\($region\)]($style)'
symbol = " "
style = "bg:bg2"
disabled = false
detect_env_vars = []

[gcloud.region_aliases]

[gcloud.project_aliases]

[openstack]
format = '[ $symbol$cloud\($project\) ]($style)'
symbol = " "
style = "bg:bg2"
disabled = false

[time]
disabled = true
time_format = "%R"
style = "bg:bg1"
format = '[[  $time ](fg:fg0 bg:bg2)]($style)'

[cmd_duration]
min_time = 2000
format = "[ 󰔟 $duration]($style)"
style = "fg:fg0 bg:bg1"
show_milliseconds = false
disabled = false
show_notifications = false
min_time_to_notify = 45000

[line_break]
disabled = false

[sudo]
format = "[$symbol]($style)"
symbol = "⚡"
style = "fg:l_yellow"
allow_windows = false
disabled = false

[character]
disabled = false
success_symbol = '[](bold fg:l_green)'
error_symbol = '[](bold fg:l_red)'
vimcmd_symbol = '[](bold fg:l_orange)'
vimcmd_replace_one_symbol = '[](bold fg:l_purple)'
vimcmd_replace_symbol = '[](bold fg:l_aqua)'
vimcmd_visual_symbol = '[](bold fg:l_yellow)'

[jobs]
threshold = 1
symbol_threshold = 1
number_threshold = 1
format = " [](fg:d_yellow)[$symbol$number]($style)[](fg:d_yellow)"
symbol = "✦ "
style = "bold fg:fg0 bg:d_yellow"

[shlvl]
threshold = 2
format = " [](fg:d_aqua)[$symbol$shlvl]($style)[](fg:d_aqua)"
symbol = " "
repeat = false
repeat_offset = 0
style = "bold fg:fg0 bg:d_aqua"
disabled = false

[battery]
full_symbol = "[](fg:l_blue)[󰁹$percentage](bg:l_blue fg:fg0)[](fg:l_blue)"
charging_symbol = "[](fg:l_green)[󰂄$percentage](bg:l_green fg:fg0)[](fg:l_green)"
discharging_symbol = "[](fg:l_orange)[󰂃$percentage](bg:l_orange fg:fg0)[](fg:l_orange)"
unknown_symbol = "[](fg:l_black)[󰁽$percentage](bg:l_black fg:fg0)[](fg:l_black)"
empty_symbol = "[](fg:d_red)[󰂎$percentage](bg:d_red fg:fg0)[](fg:d_red)"
disabled = false
format = " $symbol"

[[battery.display]]
threshold = 25

[memory_usage]
threshold = 75
format = " [](fg:bg4)[ $ram | $swap ]($style)[](fg:bg4)"
style = "bg:bg4 fg:fg0"
symbol = " "
disabled = false
