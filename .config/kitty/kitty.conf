# Se desacitivaron las funcionalidades de tabs y de sesiones

# esto lo cambio para ssh
term xterm-256color

font_family      CaskaydiaCove Nerd Font
bold_font        CaskaydiaCove Nerd Font Bold
italic_font      CaskaydiaCove Nerd Font Italic
bold_italic_font CaskaydiaCove Nerd Font Bold Italic

font_size 11.0

disable_ligatures never

# ===================================================================================

cursor_shape beam

cursor_shape_unfocused underline

cursor_beam_thickness 1.8

cursor_underline_thickness 2.0

cursor_blink_interval -1

cursor_stop_blinking_after 0

cursor_trail 1

cursor_trail_decay 0.1 0.3

cursor_trail_start_threshold 0

#: Set the distance threshold for starting the cursor trail. This
#: option accepts a positive integer value that represents the minimum
#: number of cells the cursor must move before the trail is started.
#: When the cursor moves less than this threshold, the trail is
#: skipped, reducing unnecessary cursor trail animation.

# ===================================================================================

scrollback_lines 2000

scrollback_indicator_opacity 1.0

wheel_scroll_multiplier 0.00001

wheel_scroll_min_lines 1

touch_scroll_multiplier 1.0

# ===================================================================================

mouse_hide_wait 5.0

url_color #5FD7FF
url_style curly

open_url_with default

url_prefixes file ftp ftps gemini git gopher http https irc ircs kitty mailto news sftp ssh

detect_urls yes

url_excluded_characters

show_hyperlink_targets no

underline_hyperlinks hover

copy_on_select no

#: Copy to clipboard or a private buffer on select. With this set to
#: clipboard, selecting text with the mouse will cause the text to be
#: copied to clipboard. Useful on platforms such as macOS that do not
#: have the concept of primary selection. You can instead specify a
#: name such as a1 to copy to a private kitty buffer. Map a shortcut
#: with the paste_from_buffer action to paste from this private
#: buffer. For example::

#:     copy_on_select a1
#:     map shift+cmd+v paste_from_buffer a1

#: Note that copying to the clipboard is a security risk, as all
#: programs, including websites open in your browser can read the
#: contents of the system clipboard.

# paste_actions quote-urls-at-prompt,confirm

#: A comma separated list of actions to take when pasting text into
#: the terminal. The supported paste actions are:

#: quote-urls-at-prompt:
#:     If the text being pasted is a URL and the cursor is at a shell prompt,
#:     automatically quote the URL (needs shell_integration).
#: replace-dangerous-control-codes
#:     Replace dangerous control codes from pasted text, without confirmation.
#: replace-newline
#:     Replace the newline character from pasted text, without confirmation.
#: confirm:
#:     Confirm the paste if the text to be pasted contains any terminal control codes
#:     as this can be dangerous, leading to code execution if the shell/program running
#:     in the terminal does not properly handle these.
#: confirm-if-large
#:     Confirm the paste if it is very large (larger than 16KB) as pasting
#:     large amounts of text into shells can be very slow.
#: filter:
#:     Run the filter_paste() function from the file paste-actions.py in
#:     the kitty config directory on the pasted text. The text returned by the
#:     function will be actually pasted.
#: no-op:
#:     Has no effect.

strip_trailing_spaces never

select_by_word_characters @-./_~?&=%+#

select_by_word_characters_forward

#: Characters considered part of a word when extending the selection
#: forward on double clicking. In addition to these characters any
#: character that is marked as an alphanumeric character in the
#: Unicode database will be matched.

#: If empty (default) select_by_word_characters will be used for both
#: directions.

click_interval -1.0

# ===================================================================================

repaint_delay 10

#: Delay between screen updates (in milliseconds). Decreasing it,
#: increases frames-per-second (FPS) at the cost of more CPU usage.
#: The default value yields ~100 FPS which is more than sufficient for
#: most uses. Note that to actually achieve 100 FPS, you have to
#: either set sync_to_monitor to no or use a monitor with a high
#: refresh rate. Also, to minimize latency when there is pending input
#: to be processed, this option is ignored.

input_delay 3

#: Delay before input from the program running in the terminal is
#: processed (in milliseconds). Note that decreasing it will increase
#: responsiveness, but also increase CPU usage and might cause flicker
#: in full screen programs that redraw the entire screen on each loop,
#: because kitty is so fast that partial screen updates will be drawn.
#: This setting is ignored when the input buffer is almost full.

sync_to_monitor yes

#: Sync screen updates to the refresh rate of the monitor. This
#: prevents screen tearing
#: <https://en.wikipedia.org/wiki/Screen_tearing> when scrolling.
#: However, it limits the rendering speed to the refresh rate of your
#: monitor. With a very high speed mouse/high keyboard repeat rate,
#: you may notice some slight input latency. If so, set this to no.

# ===================================================================================

# sonido de error de terminal
enable_audio_bell no

# efecto de parpadeo de la terminal cuando suena
visual_bell_duration 0.0

# color del flash
visual_bell_color none

# si hace una alerta en el desktop
window_alert_on_bell no

# simbolo para ver la campana
bell_on_tab "ðŸ”” "

# ===================================================================================

remember_window_size  yes
initial_window_width  640
initial_window_height 400

confirm_os_window_close -1

# ===================================================================================
# esto lo configure pero no se puede usar porque despues la deshabilite

tab_bar_edge top

tab_bar_style powerline

tab_bar_align left

tab_bar_min_tabs 2

tab_powerline_style slanted

tab_title_max_length 7

tab_title_template "{fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab}{index} {title}"

# ===================================================================================

background_opacity 1.0

background_blur 0

background_image none

background_image_layout tiled

background_image_linear no

transparent_background_colors

dynamic_background_opacity no

background_tint 0.0

background_tint_gaps 1.0

dim_opacity 0.4

background            #282828
foreground            #ebdbb2

cursor                #928374
cursor_text_color     #111111

selection_foreground  #928374
selection_background  #3c3836

color0  #282828
color8  #928374

# red/light red
color1                #cc241d
color9                #fb4934

# green/light green
color2                #98971a
color10               #b8bb26

# yellow/light yellow
color3                #d79921
color11               #fabd2d

# blue/light blue
color4                #458588
color12               #83a598

# magenta/light magenta
color5                #b16286
color13               #d3869b

# cyan/lighy cyan
color6                #689d6a
color14               #8ec07c

# light gray/dark gray
color7                #a89984
color15               #928374

# mark1_foreground black

#: Color for marks of type 1

# mark1_background #98d3cb

#: Color for marks of type 1 (light steel blue)

# mark2_foreground black

#: Color for marks of type 2

# mark2_background #f2dcd3

#: Color for marks of type 1 (beige)

# mark3_foreground black

#: Color for marks of type 3

# mark3_background #f274bc

#: Color for marks of type 3 (violet)

# ===================================================================================

shell .

editor .

close_on_child_death yes

allow_remote_control no

update_check_interval 24

# clipboard_control write-clipboard write-primary read-clipboard-ask read-primary-ask

#: Allow programs running in kitty to read and write from the
#: clipboard. You can control exactly which actions are allowed. The
#: possible actions are: write-clipboard, read-clipboard, write-
#: primary, read-primary, read-clipboard-ask, read-primary-ask. The
#: default is to allow writing to the clipboard and primary selection
#: and to ask for permission when a program tries to read from the
#: clipboard. Note that disabling the read confirmation is a security
#: risk as it means that any program, even the ones running on a
#: remote server via SSH can read your clipboard. See also
#: clipboard_max_size.

# clipboard_max_size 512

#: The maximum size (in MB) of data from programs running in kitty
#: that will be stored for writing to the system clipboard. A value of
#: zero means no size limit is applied. See also clipboard_control.

allow_hyperlinks yes

shell_integration enabled

allow_cloning ask

notify_on_cmd_finish never

# ===================================================================================

# wayland_titlebar_color system

#: The color of the kitty window's titlebar on Wayland systems with
#: client side window decorations such as GNOME. A value of system
#: means to use the default system colors, a value of background means
#: to use the background color of the currently active kitty window
#: and finally you can use an arbitrary color, such as #12af59 or red.


# linux_display_server auto

#: Choose between Wayland and X11 backends. By default, an appropriate
#: backend based on the system state is chosen automatically. Set it
#: to x11 or wayland to force the choice. Changing this option by
#: reloading the config is not supported.

# wayland_enable_ime yes

#: Enable Input Method Extension on Wayland. This is typically used
#: for inputting text in East Asian languages. However, its
#: implementation in Wayland is often buggy and introduces latency
#: into the input loop, so disable this if you know you dont need it.
#: Changing this option by reloading the config is not supported, it
#: will not have any effect.

# ===================================================================================

kitty_mod ctrl+shift

# map kitty_mod+c copy_to_clipboard

map kitty_mod+v paste_from_clipboard

map kitty_mod+s paste_from_selection

map kitty_mod+o pass_selection_to_program

#::  You can also pass the contents of the current selection to any
#::  program with pass_selection_to_program. By default, the system's
#::  open program is used, but you can specify your own, the selection
#::  will be passed as a command line argument to the program. For
#::  example::

#::      map kitty_mod+o pass_selection_to_program firefox

#::  You can pass the current selection to a terminal program running
#::  in a new kitty window, by using the @selection placeholder::

#::      map kitty_mod+y new_window less @selection


map kitty_mod+up    scroll_line_up
map kitty_mod+k     scroll_line_up

map kitty_mod+down    scroll_line_down
map kitty_mod+j       scroll_line_down

map kitty_mod+page_up scroll_page_up

map kitty_mod+page_down scroll_page_down

map kitty_mod+home scroll_home

map kitty_mod+end scroll_end

map kitty_mod+z scroll_to_prompt -1

#::  Use a parameter of 0 for scroll_to_prompt to scroll to the last
#::  jumped to or the last clicked position. Requires shell
#::  integration <https://sw.kovidgoyal.net/kitty/shell-integration/>
#::  to work.

map kitty_mod+x scroll_to_prompt 1

map kitty_mod+h show_scrollback

#::  You can pipe the contents of the current screen and history
#::  buffer as STDIN to an arbitrary program using launch --stdin-
#::  source. For example, the following opens the scrollback buffer in
#::  less in an overlay window::

#::      map f1 launch --stdin-source=@screen_scrollback --stdin-add-formatting --type=overlay less +G -R

#::  For more details on piping screen and buffer contents to external
#::  programs, see launch <https://sw.kovidgoyal.net/kitty/launch/>.

#: Browse output of the last shell command in pager

map kitty_mod+g show_last_command_output

#::  You can also define additional shortcuts to get the command
#::  output. For example, to get the first command output on screen::

#::      map f1 show_first_command_output_on_screen

#::  To get the command output that was last accessed by a keyboard
#::  action or mouse action::

#::      map f1 show_last_visited_command_output

#::  You can pipe the output of the last command run in the shell
#::  using the launch action. For example, the following opens the
#::  output in less in an overlay window::

#::      map f1 launch --stdin-source=@last_cmd_output --stdin-add-formatting --type=overlay less +G -R

#::  To get the output of the first command on the screen, use
#::  @first_cmd_output_on_screen. To get the output of the last jumped
#::  to command, use @last_visited_cmd_output.

#::  Requires shell integration
#::  <https://sw.kovidgoyal.net/kitty/shell-integration/> to work.

# ===================================================================================

# aca me pongo la gorra y desactivo esto para que no haga multiplexado

# map kitty_mod+enter new_window
map kitty_mod+enter none

#::  You can open a new kitty window running an arbitrary program, for
#::  example::

#::      map kitty_mod+y launch mutt

#::  You can open a new window with the current working directory set
#::  to the working directory of the current window using::

#::      map ctrl+alt+enter launch --cwd=current

#::  You can open a new window that is allowed to control kitty via
#::  the kitty remote control facility with launch --allow-remote-
#::  control. Any programs running in that window will be allowed to
#::  control kitty. For example::

#::      map ctrl+enter launch --allow-remote-control some_program

#::  You can open a new window next to the currently active window or
#::  as the first window, with::

#::      map ctrl+n launch --location=neighbor
#::      map ctrl+f launch --location=first

#::  For more details, see launch
#::  <https://sw.kovidgoyal.net/kitty/launch/>.

# map kitty_mod+n new_os_window
map kitty_mod+n none

# map kitty_mod+w close_window
map kitty_mod+w none

# map kitty_mod+] next_window
map kitty_mod+] none

# map kitty_mod+[ previous_window
map kitty_mod+[ none

# map kitty_mod+f move_window_forward
map kitty_mod+f none

# map kitty_mod+b move_window_backward
map kitty_mod+b none

# map kitty_mod+` move_window_to_top
map kitty_mod+` none

# map kitty_mod+r start_resizing_window
map kitty_mod+r none

# map kitty_mod+1 first_window
map kitty_mod+1 none

# map kitty_mod+2 second_window
map kitty_mod+2 none

# map kitty_mod+3 third_window
map kitty_mod+3 none

# map kitty_mod+4 fourth_window
map kitty_mod+4 none

# map kitty_mod+5 fifth_window
map kitty_mod+5 none

# map kitty_mod+6 sixth_window
map kitty_mod+6 none

# map kitty_mod+7 seventh_window
map kitty_mod+7 none

# map kitty_mod+8 eighth_window
map kitty_mod+8 none

# map kitty_mod+9 ninth_window
map kitty_mod+9 none

# map kitty_mod+0 tenth_window
map kitty_mod+0 none

# map kitty_mod+f7 focus_visible_window
map kitty_mod+f7 none

# map kitty_mod+f8 swap_with_window
map kitty_mod+f8 none


# map kitty_mod+right next_tab
# map ctrl+tab        next_tab
map kitty_mod+right none
map ctrl+tab        none

# map kitty_mod+left previous_tab
# map ctrl+shift+tab previous_tab
map kitty_mod+left none
map ctrl+shift+tab none

# map kitty_mod+t new_tab
map kitty_mod+t none

# map kitty_mod+q close_tab
map kitty_mod+q none

# map shift+cmd+w close_os_window
map shift+cmd+w none

# map kitty_mod+. move_tab_forward
map kitty_mod+. none

# map kitty_mod+, move_tab_backward
map kitty_mod+, none

# map kitty_mod+alt+t set_tab_title
map kitty_mod+alt+t none

# map kitty_mod+l next_layout
map kitty_mod+l none

map kitty_mod+equal  change_font_size all +2.0
map kitty_mod+plus   change_font_size all +2.0
map kitty_mod+kp_add change_font_size all +2.0

map kitty_mod+minus       change_font_size all -2.0
map kitty_mod+kp_subtract change_font_size all -2.0

map kitty_mod+backspace change_font_size all 0

map kitty_mod+e open_url_with_hints

# map kitty_mod+p>f kitten hints --type path --program -
map kitty_mod+p>f none

# map kitty_mod+p>shift+f kitten hints --type path
map kitty_mod+p>shift+f none

# map kitty_mod+p>l kitten hints --type line --program -
map kitty_mod+p>l none

# map kitty_mod+p>w kitten hints --type word --program -
map kitty_mod+p>w none

# map kitty_mod+p>h kitten hints --type hash --program -
map kitty_mod+p>h none

# map kitty_mod+p>n kitten hints --type linenum
map kitty_mod+p>n none

# map kitty_mod+p>y kitten hints --type hyperlink
map kitty_mod+p>y none

# map kitty_mod+f1 show_kitty_doc overview
map kitty_mod+f1 none

map kitty_mod+f11 toggle_fullscreen

map kitty_mod+f10 toggle_maximized

#: Unicode input
map kitty_mod+u    kitten unicode_input

# map kitty_mod+f2 edit_config_file
map kitty_mod+f2 none

# map kitty_mod+escape kitty_shell window
map kitty_mod+escape none

#: Increase background opacity
# map kitty_mod+a>m set_background_opacity +0.1

#: Decrease background opacity
# map kitty_mod+a>l set_background_opacity -0.1

#: Make background fully opaque
# map kitty_mod+a>1 set_background_opacity 1

#: Reset background opacity
# map kitty_mod+a>d set_background_opacity default

#: Reset the terminal
# map kitty_mod+delete clear_terminal reset active
map kitty_mod+delete none

map kitty_mod+f5 load_config_file

map kitty_mod+f6 debug_config
